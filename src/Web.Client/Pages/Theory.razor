@page "/theory"
@inject NavigationManager NavigationManager
@inject ITaskService TaskService
@using Web.Client.Services
@using Web.Shared
<h3>Select your lesson:</h3>

        @if (model == null)
        {
            <!-- Show this if the current user has no data... yet... -->
            <p>
                <em>Loading...</em>
            </p>
        }
        else
        {
            <!-- Show the forecasts for the current user -->
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Level</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var task in model.Tasks)
                    {
                        <tr @onclick="(() => GoToRead(task.Id))">
                            <td>@task.Title</td>
                            <td>@task.Level</td>
                        </tr>
                    }
                </tbody>
            </table>
        }

@code {

    TaskList model;
    string ServerError;

    protected override async Task OnInitializedAsync()
    {
        var result = await TaskService.GetList();
        model = result;

    }

    void GoToRead(int taskId)
    {
        NavigationManager.NavigateTo($"/read/{taskId}");
    }
    Web.Shared.TaskViewModel createmodel;
    bool CreatePopup;

    }
